# Maintainer: Leonardo Berbert <leo4berbert@gmail.com>
# Contributor: Vilmar Catafesta <vcatafesta@gmail.com>
# Contributor: Tales A. Mendon√ßa <talesam@gmail.com>

pkgname=comm-openbbox
pkgdesc="Meta package for Openbox"
pkgver=$(date +%Y%m%d)
pkgrel=$(date +%H%M)
arch=('any')
license=('MIT')
url="https://github.com/communitybig/${pkgname}"
source=("git+${url}.git")
md5sums=('SKIP')
depends=(
 openbox
 xorg-xinit 
 xorg-server 
 base-devel
)
optdepends=(
 openbox-themes
 comm-wallpapers-openbox
 obconf
 obmenu
 obmenu-generator
 nordzy-cursors
 picom
 nitrogen
 dunst
 tint2
 polybar
 rofi
 pastel
 perl
 python
 python-pywal
 python-lxml
 xmlstarlet
 thunar
 plank
 alacritty
 kitty
 feh
 conky
 firefox
 geany
 betterlockscreen
 #XFCE
 xfce4-terminal
 xfce4-settings
 xfce4-power-manager
 # PolicyKit authentication
 polkit
 xfce-polkit
 # Login
 lightdm
 lightdm-slick-greeter
 lightdm-settings
 #Sound
 mpc
 mpd
 pulsemixer
 pipewire
 pipewire-pulse
 # Extras
 paprefs
 viewnior
 networkmanager
 networkmanager-dmenu-git
 network-manager-applet
 perl-json-xs
 light
 perl-linux-desktopfiles
 zsh
 zsh-completions
 glxinfo
 libnotify
 libsndfile
 lib32-libsndfile
 xf86-input-elographics
 xf86-input-evdev
 xf86-input-libinput
 xf86-input-vmmouse
 xf86-input-void
 xdotool
 xclip
 xcolor
 imagemagick
 # X11 Server and components
 xorg-server
 xorg-xinit
 xorg-xrandr
 xorg-xrdb
 xorg-xbacklight
 xorg-xinput
 xorg-xkill
 xorg-xprop 

 # Nerd Fonts
 ttf-fira-sans
 ttf-fira-code
 ttf-firacode-nerd
 ttf-dejavu
 ttf-nerd-fonts-symbols-with-biglinux
 ttf-jetbrains-mono
 ttf-dejavu
 ttf-liberation
 ttf-nerd-fonts-symbols
 ttf-nerd-fonts-symbols-common
 ttf-nerd-fonts-symbols-mono
)

# Automatically detect and use the correct install file
if [ -e "${pkgname}.install" ]; then
	install=${pkgname}.install
elif [ -e "pkgbuild.install" ]; then
	install=pkgbuild.install
fi

prepare() {
	cd "${srcdir}/${pkgname}"
	# Add any preparation steps here, if needed
	# For example: patch -p1 < "${srcdir}/patch-file.patch"
}

build() {
	cd "${srcdir}/${pkgname}"
	# Add build steps here, if needed
	# For example: make
}

check() {
	cd "${srcdir}/${pkgname}"
	# Add check/test steps here, if needed
	# For example: make check
}

package() {
	cd "${srcdir}/${pkgname}"

	mkdir -p "${pkgdir}/usr/share/${pkgname}"
	printf "%s\n" "${optdepends[@]}" >"${pkgdir}/usr/share/${pkgname}/optdepends"

	# Determine the correct source directory
	if [ -d "${pkgname}" ]; then
		srcdir="${srcdir}/${pkgname}/${pkgname}"
	else
		srcdir="${srcdir}/${pkgname}"
	fi

	# Install files
	local dirs=("usr" "etc" "opt")
	for dir in "${dirs[@]}"; do
		if [ -d "${srcdir}/${dir}" ]; then
			cp -a "${srcdir}/${dir}" "${pkgdir}/"
		fi
	done

	# Install license file if present
	if [ -f "LICENSE" ]; then
		install -Dm644 LICENSE "${pkgdir}/usr/share/licenses/${pkgname}/LICENSE"
	fi

	# Install documentation if present
	if [ -f "README.md" ]; then
		install -Dm644 README.md "${pkgdir}/usr/share/doc/${pkgname}/README.md"
	fi
}
